@use "mixin" as *;

.try {
  /** ここに記述しよう */
  $cDark: rgb(50, 50, 50);
  
  .spinner {
    // display: inline-block;
    width: 40px;
    height: 40px;
    background-color: $cDark;
    margin: 100px auto;
    transform-style: preserve-3d;
    // perspective: 300px;
    @include animation(
      $name: turn,
      $duration: 1.2s,
      $iteration-count: infinite
    );
  }

  @keyframes turn {
    0% {
      transform: perspective(300px) rotateX(0deg);
    }
    50% {
      transform: perspective(300px) rotateX(180deg);
    }
    100% {
      transform: perspective(300px) rotateZ(180deg);
    }
  }

  .double-spinner {
    margin: 100px auto;
    position: relative;
    width: 36px;
    height: 36px;

    div {
      // display: inline-block;
      // width: 36px;
      // height: 36px;
      width: 100%;
      height: 100%;
      background-color: rgba(50, 50, 50, 0.5);
      border-radius: 50%;
      position: absolute;
      @include animation(
        $name: bounce,
        $duration: 2s,
        $iteration-count: infinite,
        // $direction: alternate,
        $timing-function: ease-in-out
      );
      
      // @for $i from 1 through 2 {
      //   &:nth-child(#{$i}) {
      //     animation-delay: (.6s * $i)
      //   }
      &:nth-child(2) {
        animation-delay: -1s;
      }
    }
  }

  @keyframes bounce {
    0%, 100% {
      transform: scale(0);
    }
    50% {
      transform: scale(1);
    }
  }

  .rect-spinner {
    margin: 100px auto;
    width: 50px;
    height: 40px;

    div {
      display: inline-block;
      width: 6px;
      height: 100%;
      background-color: $cDark;
      @include animation(
        $name: piano,
        $duration: 1.2s,
        $iteration-count: infinite,
        // $direction: alternate
      );
      @for $i from 1 through 5 {
        &:nth-child(#{$i}) {
          animation-delay: -1s + .1s * $i
        }
      }
    } 
  }

  @keyframes piano {
    0%, 40%, 100% {
      transform: scaleY(0.4);
    }
    20% {
      transform: scaleY(1);
    }
  }
}


